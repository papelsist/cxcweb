buildscript {
    repositories {
        maven { url "http://repo.grails.org/grails/core" }
        maven { url "https://dl.bintray.com/ctoestreich/grails-plugins" } //Required until grails repo is fixed
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:7.0.4"
        classpath "org.grails.plugins:views-gradle:2.0.2"
    }
}

version "1.0.0"
group "sxcxc.api"


apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"
apply plugin: 'project-report'
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "http://repo.grails.org/grails/core" }
    maven { url "http://dl.bintray.com/puneetbehl/plugins"}
    maven { url "http://dl.bintray.com/rcancino/cfdi"}
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.18.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api:2.3.1"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "io.micronaut:micronaut-http-client"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails:views-json-testing-support"
    testCompile "org.hibernate.validator:hibernate-validator:6.0.20.Final"

    // compile "org.codehaus.groovy:groovy-all:2.5.6"
    compile "org.codehaus.groovy:groovy-dateutil:2.5.6"
    // compile group: 'org.codehaus.groovy', name: 'groovy-dateutil', version: '3.0.4'

    /***  Custom dependenices ******/

    // compile 'org.codehaus.groovy:groovy-all:2.4.11'
    compile 'org.apache.commons:commons-lang3:3.1'
    runtime 'mysql:mysql-connector-java:5.1.29'

    compile 'org.grails.plugins:spring-security-rest:3.0.1'

    // Grails console
    compile "org.grails.plugins:gsp"
    runtime 'org.grails.plugins:grails-console:2.1.1'

    // CFDI support
    // implementation 'lx.cfdi.utils:1.0.5'
    implementation('lx.cfdi:v33:1.0.5')

    compile 'sx.cfdi.providers:edicom:1.0.0'
    compile 'org.apache.commons:commons-compress:1.15'
    compile 'net.glxn:qrgen:1.2'
    compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'

    // Cloud services
    implementation 'com.google.firebase:firebase-admin:7.1.0'
    //implementation 'com.google.firebase:firebase-admin:7.0.0'
    // implementation 'com.google.firebase:firebase-admin:6.13.0'
    // compile 'com.google.cloud:google-cloud-storage:1.108.0'
    compile 'com.mailjet:mailjet-client:4.2.0'

    /** Jasper plugin **/
    compile 'org.grails.plugins:jasper:2.1.0'
    // compile 'org.grails.plugins:jasper:2.1.0.RC1'
    compile 'org.eclipse.jdt.core.compiler:ecj:4.4'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
    systemProperties System.properties  // Added
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}


bootWar {
    launchScript()
    String env = System.getProperty('grails.env') ?: 'prod'
    archiveVersion = ''
    archiveBaseName = "sx-cxc-server"
}

task buildConf() {
    doLast {
        String fileName = "sx-cxc-server.conf"
        File file = file("build/libs/${fileName}")
        file.append("JAVA_OPTS=-Xmx1024M")
        file.append("\nRUN_ARGS=\"--JDBC_CONNECTION_STRING=localhost/siipapx_dev --server.port=9095\"")

    }
}

war.finalizedBy(buildConf)
/**
 *
 * JAVA_OPTS=-Xmx1024M
 * RUN_ARGS="--JDBC_CONNECTION_STRING=10.10.1.229/siipapx --server.port=9095
 * --MJ_APIKEY_PUBLIC=1d98821252f0e19ba4d9a6f678a8f129
 * --MJ_APIKEY_PRIVATE=4b7f29ef7df2f51dc497f3490a008cd3
 * --MJ_DEFAUL_SENDER=facturacion@papelsa.mobi"
 *
 **/
